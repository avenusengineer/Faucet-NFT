@using NftFaucetRadzen.Models

<RadzenDataList WrapItems="true" Data="@Data" TItem="NetworkModel" >
    <Template Context="network">
        <RadzenCard class=@("box" + (network.IsSupported ? string.Empty : " non-supported-container")) Style="width: 250px;" onclick="@(async () => await ToggleSelection(network.Id))">
            <div class="d-flex flex-row align-items-center">
                <RadzenImage Path=@("./images/" + (network.ImageName ?? "ethereum.svg")) Class="float-left mr-3" Style="width: 80px; height: 80px; margin-right: 1em;" />
                <div>
                    @if (SelectedNetworkIds != null && SelectedNetworkIds.Contains(network.Id))
                    {
                        <Checkmark AnchorToTopRightCorner="true"/>
                    }
                    <h4 class="mb-0">@network.Name</h4>
                    @if (network.ChainId.HasValue)
                    {
                        <div style="font-size: .8em">ChainID: @network.ChainId</div>
                    }
                    @if (!string.IsNullOrEmpty(network.Currency))
                    {
                        <div style="font-size: .8em">Currency: @network.Currency</div>
                    }
                    <div>
                        @if (!network.IsSupported)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Light" IsPill="true" Text="Not Supported"/>
                        }
                        @if (!network.IsTestnet)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Danger" IsPill="true" Text="Mainnet"/>
                        }
                        @if (network.IsDeprecated)
                        {
                            <RadzenBadge BadgeStyle="BadgeStyle.Warning" IsPill="true" Text="Deprecated"/>
                        }
                    </div>
                </div>
            </div>
        </RadzenCard>
    </Template>
</RadzenDataList>
